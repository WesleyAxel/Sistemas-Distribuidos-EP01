// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "ufanc.aluno.sistemas.servidor";
option java_outer_classname = "ServidorProto";
option objc_class_prefix = "HLW";

package servidor;

// The greeting service definition.
service Greeter {
    rpc Criar(CriarCanalRequest) returns (ResponseCriarCanal);
    rpc Remover(RemoverCanalRequest) returns (RemoverCanalResponse);
    rpc ReceberMensagem(MensagemRequest) returns (MensagemResponse);
}

// Definindo tipos de canais através de Enum
enum TipoCanal {
    SIMPLES = 0;
    MULTIPLO = 1;
}

// Definindo a mensagem de criação de canal
message CriarCanalRequest {
    string nome = 1;
    TipoCanal tipo_canal = 2;
    string nome_criador = 3;

}

// Define a mensagem para a response de criação de canal
message ResponseCriarCanal {
    string mensagem = 1;
}

// Definindo a mensagem de remoção de canal
message RemoverCanalRequest {
    string nome = 1;
    string nome_criador = 2;  
}

// Define a mensagem para a response para remoção
message RemoverCanalResponse {
    string mensagem = 1;
}

// Define a mensagem para o request para envio de mensagem para o canal
message MensagemRequest {
    string nome_canal = 1;  
    string nome_criador = 2;     
    string mensagem = 3;  
}

// Define a mensagem de response para envio de mensagem
message MensagemResponse {
    string mensagem = 1;
}

